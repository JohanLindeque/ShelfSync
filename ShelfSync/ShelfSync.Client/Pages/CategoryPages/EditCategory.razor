@page "/editcategory"
@page "/editcategory/{id:int}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager

@rendermode InteractiveAuto

<div class="mb-4">
    @if (Id == null)
    {
        <h3>Create Category</h3>
    }
    else
    {
        <h3>Edit @category.Name</h3>
    }
</div>

<EditForm FormName="editCategory" Model="category" OnSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="category.Name" />
    </div>

    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputText id="description" class="form-control" @bind-Value="category.Description" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    @* <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">Cancel</button> *@
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    [SupplyParameterFromForm]
    Category category { get; set; } = new Category { Name = string.Empty, Description = string.Empty };

    protected override async Task OnParametersSetAsync()
    {
        if (Id.HasValue)
        {
            var existingCategory = await CategoryService.GetCategoryById(Id.Value);
            if (existingCategory != null)
                category = existingCategory;
        }
      
    }

    @* private void Cancel()
    {
        NavigationManager.NavigateTo("/categories");
    } *@

    async Task HandleSubmit()
{
    try
    {
        if (Id.HasValue)
        {
            // Editing existing category
            category.Id = Id.Value; // Ensure ID is set
            await CategoryService.UpdateCategory(category);
        }
        else
        {
            // Creating new category
            await CategoryService.AddCategory(category);
        }

        NavigationManager.NavigateTo("/categories");
    }
    catch (HttpRequestException ex)
    {
        Console.WriteLine($"Error saving category: {ex.Message}");
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Unexpected error: {ex.Message}");
    }
}
}
