@page "/categories"
@using ShelfSync.Client.Componenets.CategoryComponents


@rendermode InteractiveAuto

@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager


<div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-2">
    <h2 class="mb-0">Storage Categories</h2>
    <button @onclick="CreateCategory" class="btn btn-primary">
        <i class="bi bi-plus-lg"></i> Add Category
    </button>
</div>

@if (categories == null)
{
    <div class="text-muted fst-italic">Loading...</div>
}
else if (categories.Count == 0)
{
    <div class="text-muted fst-italic">No Categories Found.</div>
}
else
{
    <div class="row g-4 mt-2">
        @foreach (var category in categories)
        {
            <div class="col-sm-6 col-md-4 col-lg-3">
                <div class="card shadow-sm h-100">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-primary fw-bold">@category.Name</h5>

                        <div class="mb-3">
                            <span class="text-muted small fw-bold">Description</span><br />
                            <span>@(string.IsNullOrWhiteSpace(category.Description) ? "—" : category.Description)</span>
                        </div>

                        <div class="mt-auto d-flex gap-2 flex-wrap">
                            <EditCategoryButton id="@category.Id" />
                            <DeleteCategoryButton Id="@category.Id" OnCategoryDeleted="HandleCategoryDeleted" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}


@code {
    List<Category>? categories = null;

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
    }

    private async Task LoadCategories()
    {
        categories = await CategoryService.GetAllCategories();
    }

    private async Task HandleCategoryDeleted()
    {
        await LoadCategories(); // Refresh the categories list
        StateHasChanged(); // Force UI update
    }

    void CreateCategory()
    {
        NavigationManager.NavigateTo("/editcategory");
    }
}
